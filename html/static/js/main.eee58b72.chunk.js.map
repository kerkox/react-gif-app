{"version":3,"sources":["components/AddCategory.js","helpers/GetFetchGifs.js","components/GifGridItem.js","components/Loading.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getFetchGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized","GifGridItem","className","src","alt","Loading","class","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","i","ReactDOM","render","document","getElementById"],"mappings":"gOAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAE3B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACE,sBAAMC,SATa,SAACC,GACpBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAKhB,SACE,uBACEO,KAAK,OACLC,MAAOT,EACPU,SAjBoB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,a,+BCRdG,EAAY,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACpBC,EADoB,iDAC4BC,UAAUH,GADtC,gEAEPI,MAAMF,GAFC,cAEpBG,EAFoB,gBAGHA,EAAKC,OAHF,uBAGlBC,EAHkB,EAGlBA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GACpB,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,UAAUZ,QARJ,kBAWnBM,GAXmB,4CAAH,sDCEZO,EAAc,SAAC,GAAuB,EAAtBJ,GAAuB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACvC,OACE,sBAAKc,UAAU,yCAAf,UACE,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCHGO,G,MAAU,WACrB,OACE,qBAAKC,MAAM,+CCAFC,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAExB,ECJ0B,SAACA,GAC3B,MAA0Bd,mBAAS,CACjCqB,KAAM,GACNe,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAWA,OANCC,qBAAU,WACP1B,EAAaC,GACZ0B,MAAK,SAAAC,GAAI,OAAIH,EAAS,CAACjB,KAAMoB,EAAML,SAAQ,SAC3C,CAACtB,IAGCuB,EDR0BK,CAAa5B,GAAlCa,EAAZ,EAAON,KAAae,EAApB,EAAoBA,QAEpB,OACE,qCACE,oBAAIN,UAAU,oCAAd,SAAmDhB,IAChDsB,GAAW,cAAC,EAAD,IACd,qBAAKN,UAAU,YAAf,SAEIH,EAAOJ,KAAI,SAAAC,GAAG,OACZ,cAAC,EAAD,eAEMA,GADCA,EAAIC,aEWRkB,EAzBM,WAEnB,IACA,EAAoC3C,mBADf,CAAC,cACtB,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAMA,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEI6C,EAAWrB,KAAI,SAACT,EAAU+B,GAAX,OACZ,cAAC,EAAD,CAAiB/B,SAAUA,GAAb+B,YCX3BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.eee58b72.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n  const [inputValue, setInputValue] = useState('')\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value)\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if(inputValue.trim().length > 2){\r\n      setCategories(cats => [inputValue, ...cats]);\r\n      setInputValue('');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}> \r\n      <input \r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n      />\r\n    </form>\r\n  )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n}","export const getFetchGifs = async (category) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&api_key=awIobGquEIHEtuhoeE1z5u6TLEigQd4P&limit=10&`;\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n  const gifs = data.map(img => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images.downsized.url\r\n    }\r\n  })\r\n  return gifs;\r\n  \r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,  title, url }) => {\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeIn\">\r\n      <img src={url} alt={title} />\r\n      <p>{title}</p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport './Loading.css';\r\n\r\nexport const Loading = () => {\r\n  return (\r\n    <div class=\"spinner animate__animated animate__flash\">\r\n      \r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { Loading } from './Loading';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n  const {data:images, loading }  = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n      {  loading && <Loading /> }\r\n      <div className=\"card-grid\">\r\n        {\r\n          images.map(img => (\r\n            <GifGridItem\r\n              key={img.id}\r\n              {...img}\r\n            />\r\n          ))\r\n        }\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getFetchGifs } from \"../helpers/GetFetchGifs\"\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true\r\n  })\r\n\r\n   useEffect(() => {\r\n      getFetchGifs(category)\r\n      .then(imgs => setState({data: imgs, loading:false}));\r\n    }, [category])\r\n\r\n\r\n  return state;\r\n}","import React, {useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\nconst GifExpertApp = () => {\r\n\r\n  const initialState = ['One Punch'];\r\n  const [categories, setCategories] = useState(initialState)\r\n\r\n  // const handleAdd = () => {\r\n  //   setCategories(cats => [...cats, 'Jeniffer Rosales']);\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={setCategories}/>\r\n      <hr/>\r\n      <ol>\r\n        { \r\n          categories.map((category, i) => (\r\n             <GifGrid key={i} category={category}/>\r\n          ))\r\n        }\r\n      </ol>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n// import App from './App';\n// import reportWebVitals from './reportWebVitals';\n\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}